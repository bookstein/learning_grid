extends layout

block content
  h1= title
  p Welcome to #{title}

  button(type="submit"): a(href="/entities/new") Add new topic
  div#entityTable

  script(type="text/babel").
    var EntityTable = React.createClass({
      render: function() {
        return (
          <div>
            <h1>Zone: {this.props.params.zone}</h1>
            <ReactRouter.Link to="/comfort" activeClassName='active'>comfort</ReactRouter.Link>
            <ReactRouter.Link to="/learning" activeClassName='active'>learning</ReactRouter.Link>
            <ReactRouter.Link to="/terror" activeClassName='active'>terror</ReactRouter.Link>
            <table className="entities">
                <TableRows entities={this.state.rows} zone={this.props.params.zone} />
            </table>
          </div>
        )
      },
      getInitialState: function() {
          return {
            rows:[]
          };
      },
      // componentDidMount is a callback -- as soon as CommentBox has rendered, this is called
      componentDidMount: function() {
        this.serverRequest = $.get('/users/1/entities', function (result) {
          var entities = result;
          this.setState({
            rows: entities
          });
        }.bind(this));  // bind data to entityTable
      },
      componentWillUnmount: function() {
        this.serverRequest.abort();
      }
    });

    var TableRows = React.createClass({
      render: function() {
        var zone = this.props.zone
        var entities = this.props.entities.filter(function (entity) {
          return entity.zone === zone
        })
        .map(function(entity){
          return (
            <TableEntry entity={entity} key={entity.id} />
          )
        })

        return (
          <tbody>
            {entities}
          </tbody>
        )
      }
    })

    var TableEntry = React.createClass({
      render: function() {
        return (
          <tr>
            <td>{this.props.entity.name}</td>
            <td>{this.props.entity.description}</td>
            <td>{this.props.entity.zone}</td>
          </tr>
        )
      }
    })

    ReactDOM.render((
      <ReactRouter.Router history={ReactRouter.hashHistory}>
        <ReactRouter.Route path="/" component={EntityTable}/>
        <ReactRouter.Route path="/:zone" component={EntityTable}/>
      </ReactRouter.Router>
    ), document.getElementById('entityTable'))
